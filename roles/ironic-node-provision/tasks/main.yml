- name: Get node uuid
  shell: |
    ironic --json node-show {{ node_name }} | jq -r .uuid
  register: node_uuid
  environment:
    IRONIC_URL: "{{ ironic_url }}"
    OS_AUTH_TOKEN: token
    IRONIC_API_VERSION: 1.31

- name: Get node MAC address
  shell: |
    ironic --json node-port-list {{ node_uuid.stdout }} | jq .[0].address -r
  register: node_mac
  environment:
    IRONIC_URL: "{{ ironic_url }}"
    OS_AUTH_TOKEN: token
    IRONIC_API_VERSION: 1.31

- name: Create temporary directory for config-drive
  command: |
    mktemp -d --suffix config-drive-{{ node_uuid.stdout }}
  register: config_drive_dir

- name: Create config-drive directory structure
  file:
    path: "{{ config_drive_dir.stdout }}/openstack/latest"
    state: directory

- name: Create config-drive meta_data.json
  template:
    src: meta_data.json.j2
    dest: "{{ config_drive_dir.stdout }}/openstack/latest/meta_data.json"

- name: Create config-drive user_data
  template:
    src: user_data.j2
    dest: "{{ config_drive_dir.stdout }}/openstack/latest/user_data"

- name: Add IP address to provisioning nic
  command:
    ip addr add {{ provisioning_cidr }} dev {{ provisioning_nic }}
  become: true
  ignore_errors: yes

- name: Create dnsmasq host dir
  file:
    path: /var/lib/ironic/dnsmasq/host/
    state: directory
  become: true

- name: Create dnsmasq config
  template:
    src: config.j2
    dest: /var/lib/ironic/dnsmasq/config
  become: true

# TODO (slagle) It should already be started, but in some cases the previous
# config file might not yet exist.
- name: Start dnsmasq container
  command: docker start ironic_dnsmasq
  become: true

- name: Create dnsmasq addn_hosts dir
  file:
    path: /var/lib/ironic/dnsmasq/addn_hosts/
    state: directory
  become: true

- name: Configure dnsmasq host template
  template:
    src: host.j2
    dest: /var/lib/ironic/dnsmasq/host/host-{{ node_uuid.stdout }}
  become: true

- name: Configure dnsmasq addn_hosts template
  template:
    src: addn_hosts.j2
    dest: /var/lib/ironic/dnsmasq/addn_hosts/addn_hosts-{{ node_uuid.stdout }}
  become: true

- name: Create dnsmasq opts file
  template:
    src: opts.j2
    dest: /var/lib/ironic/dnsmasq/opts
  become: true

- name: SIGHUP dnsmasq
  command: docker kill --signal SIGHUP ironic_dnsmasq
  become: true

- name: "Provision node {{ node }}"
  os_ironic_node:
    auth: {}
    auth_type: "None"
    cloud: null
    ironic_url : "{{ ironic_url }}"
    deploy: True
    instance_info:
      image_source: file:///var/lib/ironic/images/rhel-atomic-cloud-7.3.5-7.x86_64.qcow2
      capabilities: '{"boot_option":"local"}'
      root_gb: 40
    uuid: "{{ node_uuid.stdout }}"
    config_drive: "{{ config_drive_dir.stdout }}"
