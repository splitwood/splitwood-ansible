- name: Get node uuid
  shell: |
    ironic --json node-show {{ node_name }} | jq -r .uuid
  register: node_uuid
  environment:
    IRONIC_URL: "{{ ironic_url }}"
    OS_AUTH_TOKEN: token
    IRONIC_API_VERSION: 1.31
  changed_when: False

- name: Get node provision_state
  shell: |
    ironic --json node-show {{ node_name }} | jq -r .provision_state
  register: node_provision_state
  environment:
    IRONIC_URL: "{{ ironic_url }}"
    OS_AUTH_TOKEN: token
    IRONIC_API_VERSION: 1.31
  changed_when: False

- name: Set node available if needed
  shell: |
    ironic node-set-provision-state {{ node_name }} provide
  environment:
    IRONIC_URL: "{{ ironic_url }}"
    OS_AUTH_TOKEN: token
    IRONIC_API_VERSION: 1.31
  when: node_provision_state.stdout != "available"

- name: Get node MAC address
  shell: |
    ironic --json node-port-list {{ node_uuid.stdout }} | jq .[0].address -r
  register: node_mac
  environment:
    IRONIC_URL: "{{ ironic_url }}"
    OS_AUTH_TOKEN: token
    IRONIC_API_VERSION: 1.31
  changed_when: False

- name: Create temporary directory for config-drive
  command: |
    mktemp -d --suffix config-drive-{{ node_uuid.stdout }}
  register: config_drive_dir

- name: Create config-drive directory structure
  file:
    path: "{{ config_drive_dir.stdout }}/openstack/latest"
    state: directory

- name: Create config-drive meta_data.json
  template:
    src: meta_data.json.j2
    dest: "{{ config_drive_dir.stdout }}/openstack/latest/meta_data.json"

- name: Create config-drive user_data
  template:
    src: user_data.j2
    dest: "{{ config_drive_dir.stdout }}/openstack/latest/user_data"

- name: Configure dnsmasq host template
  template:
    src: host.j2
    dest: /var/lib/ironic/dnsmasq/host/host-{{ node_uuid.stdout }}
  become: true

- name: Configure dnsmasq addn_hosts template
  template:
    src: addn_hosts.j2
    dest: /var/lib/ironic/dnsmasq/addn_hosts/addn_hosts-{{ node_uuid.stdout }}
  become: true

- name: restart dnsmasq
  command: docker restart ironic_dnsmasq
  become: true

- name: name: Output provisioned node name
  debug:
    msg: "Going to provision {{ node_name }}"

- name: "Provision node"
  os_ironic_node:
    auth: {}
    auth_type: "None"
    cloud: null
    ironic_url : "{{ ironic_url }}"
    deploy: True
    instance_info:
      image_source: file:///var/lib/ironic/images/rhel-atomic-cloud-7.3.5-7.x86_64.qcow2
      capabilities: '{"boot_option":"local"}'
      root_gb: 40
    uuid: "{{ node_uuid.stdout }}"
    config_drive: "{{ config_drive_dir.stdout }}"
    wait: yes
