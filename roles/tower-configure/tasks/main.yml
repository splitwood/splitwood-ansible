- name: Install tower-cli
  yum:
    name: python2-ansible-tower-cli
    state: present
  become: true

- name: Install Openstack repo
  yum:
    name: centos-release-openstack
    state: present
  become: true

- name: Install python client for Ironic
  yum:
    name: python-ironicclient
    state: present
  become: true

- name: Create a temporary working folder
  tempfile:
    state: directory
  register: tmp_folder

- name: Add tower organization
  tower_organization:
    name: "{{ organization }}"
    state: present

- name: Add tower project for Openshift
  tower_project:
    name: "{{ project_openshift }}"
    description: "Deploy Openshift on baremetal hosts provisioned by Ironic"
    scm_type: "git"
    scm_url: "https://github.com/splitwood/openshift-ansible.git"
    scm_branch: "glusterfs-fixes-too"
    organization: "{{ organization }}"
    state: present
    
- name: Add tower project for Ironic
  tower_project:
    name: "{{ project_ironic }}"
    description: "Deploy baremetal hosts with Ironic"
    scm_type: "git"
    scm_url: "https://github.com/splitwood/splitwood-ansible.git"
    scm_branch: "master"
    organization: "{{ organization }}"
    state: present

- name: Copy ssh key
  copy:
    src: "{{ ansible_ssh_private_key_file }}"
    dest: "{{ tmp_folder['path'] }}/id_rsa"
    mode: 0600

- name: Add private key for provisioned hosts
  tower_credential:
    name: "{{ credentials }}"
    description: "Hosts credentials for Splitwood"
    kind: ssh
    organization: "{{ organization }}"
    ssh_key_data: "{{ tmp_folder['path'] }}/id_rsa"
    state: present

- name: Add ironic host inventory
  tower_inventory:
    name: "{{ ironic_inventory }}"
    description: "Ironic Host"
    organization: "{{ organization }}"
    state: present
    
- name: Add ironic host group (mgmt-server)
  tower_group:
    name: mgmt-server
    description: "Ironic host"
    inventory: "{{ ironic_inventory }}"
    state: present

- name: Add ironic host to its inventory
  tower_host:
    name: "{{ hostvars['mgmt-server']['ansible_host'] }}"
    description: "Ironic host"
    inventory: "{{ ironic_inventory }}"
    state: present

- name: Associate ironic host with its group
  command: /usr/bin/tower-cli host associate --host {{ hostvars['mgmt-server']['ansible_host']|quote }} --group mgmt-server

- name: Add ironic provisioned hosts inventory
  tower_inventory:
    name: "{{ inventory }}"
    description: "Hosts inventory for Splitwood"
    organization: "{{ organization }}"
    state: present

- name: Copy the dynamic inventory script
  template:
    src: dyninv.py.j2
    dest: "{{ tmp_folder['path'] }}/dyninv.py"

# tower_inventory_script is missing!!!
- name: Add dynamic inventory script
  command: /usr/bin/tower-cli inventory_script create --name {{ script|quote }} --force-on-exists --organization {{ organization|quote }} --script @"{{ tmp_folder['path'] }}/dyninv.py"

# tower_group doesn't seem to work as exepected with inventory script
- name: Add tower group
  command: /usr/bin/tower-cli group create --name {{ group|quote }} --force-on-exists --inventory {{ inventory|quote }}  --overwrite true  --overwrite-vars true  --update-on-launch true  --source custom --source-script {{ script|quote }} --source-vars="{ \"IRONIC_API_VERSION\":\"1.31\",  \"OS_AUTH_TOKEN\":\"token\", \"IRONIC_URL\":\"http://{{ hostvars['mgmt-server']['ansible_host']|quote }}:6385\" }"

- name: Create Openshift job template
  tower_job_template:
    name: "{{ openshift_job_template }}"
    job_type: run
    inventory: "{{ inventory }}"
    project: "{{ project_openshift }}"
    playbook: playbooks/byo/config.yml
    machine_credential: "{{ credentials }}"
    state: present
    
- name: Create Ironic image template
  tower_job_template:
    name: "{{ ironic_image_job_template }}"
    job_type: run
    inventory: "{{ ironic_inventory }}"
    project: "{{ project_ironic }}"
    playbook: ironic-images.yml
    machine_credential: "{{ credentials }}"
    state: present

- name: Add atomic_image survey to Ironic image template
  command: /usr/bin/tower-cli job_template modify --name {{ ironic_image_job_template|quote }} --survey-enabled true --survey-spec="{ \"description\":\"\", \"spec\":[ { \"required\":true, \"min\":0, \"default\":\"{{ default_atomic_image }}\", \"max\":1024, \"question_description\":\"\", \"choices\":\"\", \"new_question\":true, \"variable\":\"atomic_image\", \"question_name\":\"Atomic image URL:\", \"type\":\"text\" } ], \"name\":\"\"}"

- name: Create Ironic dhcp template
  tower_job_template:
    name: "{{ ironic_dhcp_job_template }}"
    job_type: run
    inventory: "{{ ironic_inventory }}"
    project: "{{ project_ironic }}"
    playbook: ironic-dnsmasq-dhcp.yml
    machine_credential: "{{ credentials }}"
    state: present

- name: Add provisioning_nic survey to Ironic dhcp template
  command: /usr/bin/tower-cli job_template modify --name {{ ironic_dhcp_job_template|quote }} --survey-enabled true --survey-spec="{ \"description\":\"\", \"spec\":[ { \"required\":false, \"min\":0, \"default\":\"{{ default_provisioning_nic }}\", \"max\":18, \"question_description\":\"\", \"choices\":\"\", \"new_question\":true, \"variable\":\"provisioning_nic\", \"question_name\":\"Interface on Ironic host for the provisioning network:\", \"type\":\"text\" } ], \"name\":\"\"}"

- name: Create Ironic registering template
  tower_job_template:
    name: "{{ ironic_registering_job_template }}"
    job_type: run
    inventory: "{{ ironic_inventory }}"
    project: "{{ project_ironic }}"
    playbook: ironic-node-registration.yml
    machine_credential: "{{ credentials }}"
    state: present

- name: Add nodes survey to Ironic registering template
  command: /usr/bin/tower-cli job_template modify --name {{ ironic_dhcp_job_template|quote }} --survey-enabled true --survey-spec="{  \"description\":\"\",   \"spec\":[    {      \"required\":true,       \"min\":0,       \"default\":\"- name:testnode1\n  driver:pxe_ipmitool\n  driver_info:\n    power:\n      ipmi_username:username\n      ipmi_password:password\n      ipmi_address:127.0.0.1\n      ipmi_port:6234\n  nics:\n    - mac:aa:bb:cc:aa:bb:cc\n  properties:\n    cpus:1\n    cpu_arch:x86_64\n    ram:8192\n    disk_size:40\n    capabilities:profile:baremetal,boot_option:local\n- name:testnode2\n  driver:pxe_ipmitool\n  driver_info:\n    power:\n      ipmi_username:username\n      ipmi_password:password\n      ipmi_address:127.0.0.1\n      ipmi_port:6234\n  nics:\n    - mac:aa:bb:cc:aa:bb:dd\n  properties:\n    cpus:1\n    cpu_arch:x86_64\n    ram:8192\n    disk_size:40\n    capabilities:profile:baremetal,boot_option:local\",       \"max\":65536,       \"question_description\":\"\",       \"choices\":\"\",       \"variable\":\"nodes\",       \"question_name\":\"Nodes to register\",       \"type\":\"textarea\"    }  ],   \"name\":\"\"}"


- name: Clean temporary directory
  file:
    state: absent
    path: "{{ tmp_folder['path'] }}/"
